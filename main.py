import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# ЁЯФС ржХрзАржУржпрж╝рж╛рж░рзНржб-ржнрж┐рждрзНрждрж┐ржХ рж░рж┐ржкрзНрж▓рж╛ржЗ ржорзНржпрж╛ржк
KEYWORD_REPLIES = {
    "loan": "ЁЯТ░ ржЖржкржирж┐ рж▓рзЛржи ржирж┐рждрзЗ ржЪрж╛ржи? ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЬрж╛ржирж╛рждрзЗ ржЗржиржмржХрзНрж╕ ржХрж░рзБржиред",
    "hello": "ЁЯСЛ рж╣рзНржпрж╛рж▓рзЛ! ржХрзЗржоржи ржЖржЫрзЗржи?",
    "hi": "ЁЯЩВ рж╣рж╛ржЗ! ржХрж┐ржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐?",
    "help": "ЁЯЖШ рж╣рзЗрж▓рзНржк ржжрж░ржХрж╛рж░? ржЕрзНржпрж╛ржбржорж┐ржиржХрзЗ ржЯрзНржпрж╛ржЧ ржХрж░рзБржиред",
    "contact": "ЁЯУЮ ржЖржорж╛ржжрзЗрж░ ржХржирзНржЯрж╛ржХрзНржЯ: +8801XXXXXXXXX",
}

DEFAULT_REPLY = "тЬЕ ржЖржкржирж╛рж░ ржорзЗрж╕рзЗржЬ ржкрзЗржпрж╝рзЗржЫрж┐, рж╢рж┐ржЧржЧрж┐рж░ржЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржХрж░рж╛ рж╣ржмрзЗред"

async def auto_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.from_user.is_bot:
        return

    text = update.message.text.lower() if update.message.text else ""

    # ржХрзЛржи ржХрзАржУрзЯрж╛рж░рзНржб ржорж┐рж▓рзЗ рж╕рзЗржЯрж┐ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрзЗржмрзЗ
    reply = None
    for keyword, response in KEYWORD_REPLIES.items():
        if keyword in text:
            reply = response
            break

    if not reply:
        reply = DEFAULT_REPLY

    await update.message.reply_text(reply)

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # рж╢рзБржзрзБ ржЯрзЗржХрзНрж╕ржЯ ржорзЗрж╕рзЗржЬ ржзрж░ржмрзЗ
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), auto_reply))

    app.run_polling()

if __name__ == "__main__":
    main()
